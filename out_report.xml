<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="2" skipped="0" tests="23" time="3.033" timestamp="2024-02-16T18:27:12.638804" hostname="Artems-MacBook-Air-2.local"><testcase classname="test.test_owner_management.TestOwnerManagement" name="test_create_owner_with_valid_data[John-Doe-123 Main St.-Anytown-1234567890]" time="0.001" /><testcase classname="test.test_owner_management.TestOwnerManagement" name="test_create_owner_with_valid_data[Jane-Roe-456 Elm St.-Newtown-0987654321]" time="0.001" /><testcase classname="test.test_owner_management.TestOwnerManagement" name="test_create_owner_with_missing_required_fields" time="0.001" /><testcase classname="test.test_owner_management.TestOwnerManagement" name="test_find_owner_with_existing_last_name" time="0.002" /><testcase classname="test.test_owner_management.TestOwnerManagement" name="test_find_owner_with_non_existing_last_name" time="0.002" /><testcase classname="test.test_owner_management.TestOwnerManagement" name="test_update_owner_with_valid_data[1-John-Smith-123 Main St.-Anytown-1234567890]" time="0.002" /><testcase classname="test.test_owner_management.TestOwnerManagement" name="test_update_owner_with_valid_data[2-Jane-Doe-456 Elm St.-Newtown-0987654321]" time="0.002" /><testcase classname="test.test_owner_management.TestOwnerManagement" name="test_update_owner_with_invalid_data" time="0.001" /><testcase classname="test.test_owner_management.TestOwnerManagement" name="test_display_existing_owner_details" time="0.001" /><testcase classname="test.test_pet_management.TestPetManagement" name="test_create_pet_with_valid_data[Fluffy-2020-04-12-Dog]" time="0.002" /><testcase classname="test.test_pet_management.TestPetManagement" name="test_create_pet_with_valid_data[Whiskers-2019-08-09-Cat]" time="0.002" /><testcase classname="test.test_pet_management.TestPetManagement" name="test_create_pet_with_invalid_data" time="0.001" /><testcase classname="test.test_pet_management.TestPetManagement" name="test_update_pet_with_valid_data[Fido-2018-03-15-Dog]" time="0.002" /><testcase classname="test.test_pet_management.TestPetManagement" name="test_update_pet_with_valid_data[Mittens-2017-07-21-Cat]" time="0.001" /><testcase classname="test.test_pet_management.TestPetManagement" name="test_update_pet_with_invalid_data" time="0.002" /><testcase classname="test.test_vet_management.TestVetManagement" name="test_list_all_vets[HTML-/vets.html]" time="0.053" /><testcase classname="test.test_vet_management.TestVetManagement" name="test_list_all_vets[JSON-/vets.json]" time="0.025"><failure message="assert 404 == 200&#10; +  where 404 = &lt;Response [404]&gt;.status_code">self = &lt;test_vet_management.TestVetManagement object at 0x13a316650&gt;, base_url = 'http://localhost:8080', format = 'JSON', endpoint = '/vets.json'

    @pytest.mark.parametrize('format, endpoint', [
        ('HTML', '/vets.html'),
        ('JSON', '/vets.json'),
        ('XML', '/vets.xml')
    ])
    def test_list_all_vets(self, base_url, format, endpoint):
        response = requests.get(f'{base_url}{endpoint}')
&gt;       assert response.status_code == 200
E       assert 404 == 200
E        +  where 404 = &lt;Response [404]&gt;.status_code

restAPI_tests/test/test_vet_management.py:33: AssertionError</failure></testcase><testcase classname="test.test_vet_management.TestVetManagement" name="test_list_all_vets[XML-/vets.xml]" time="0.015"><failure message="assert 404 == 200&#10; +  where 404 = &lt;Response [404]&gt;.status_code">self = &lt;test_vet_management.TestVetManagement object at 0x13a315720&gt;, base_url = 'http://localhost:8080', format = 'XML', endpoint = '/vets.xml'

    @pytest.mark.parametrize('format, endpoint', [
        ('HTML', '/vets.html'),
        ('JSON', '/vets.json'),
        ('XML', '/vets.xml')
    ])
    def test_list_all_vets(self, base_url, format, endpoint):
        response = requests.get(f'{base_url}{endpoint}')
&gt;       assert response.status_code == 200
E       assert 404 == 200
E        +  where 404 = &lt;Response [404]&gt;.status_code

restAPI_tests/test/test_vet_management.py:33: AssertionError</failure></testcase><testcase classname="test.test_visit_management.TestVisitManagement" name="test_initiate_new_visit_form" time="0.002" /><testcase classname="test.test_visit_management.TestVisitManagement" name="test_create_new_visit_with_valid_data[2023-05-01-Annual vaccination]" time="0.002" /><testcase classname="test.test_visit_management.TestVisitManagement" name="test_create_new_visit_with_valid_data[2023-06-15-General checkup]" time="0.001" /><testcase classname="test.test_visit_management.TestVisitManagement" name="test_create_new_visit_with_invalid_data" time="0.001" /><testcase classname="test.test_visit_management.TestVisitManagement" name="test_show_all_visits_for_pet" time="0.002" /></testsuite></testsuites>